#include <stdio.h>
#include <sys/time.h>

void qs(int arr[], int lo, int hi);
int partition(int arr[], int lo, int hi);

int main() {
	struct timeval stop, start;


	int numbers[] = {7, 2, 0, 1, 2, 4, 6, 1};
	int length = sizeof(numbers) / sizeof(numbers[0]);

	printf("Unsorted array:\n");
	for (int n = 0; n < length; n++) {
		printf("%d ", numbers[n]);
	}

	printf("\n\nSorting Array..\n\n");

	gettimeofday(&start, NULL);

	qs(numbers, 0, length - 1);

	gettimeofday(&stop, NULL);

	printf("Sorted array:\n");
		for (int n = 0; n < length; n++) {
			printf("%d ", numbers[n]);
		}

	printf("Took: %lu us\n", (stop.tv_sec - start.tv_sec) * 1000000 + stop.tv_usec - start.tv_usec);

	return 0;
}

void qs(int arr[], int lo, int hi) {
	if (lo >= hi) {
		return;
	}

	const int pivotIdx = partition(arr, lo, hi);

	qs(arr, lo, pivotIdx - 1);
	qs(arr, pivotIdx + 1, hi);
}

int partition(int arr[], int lo, int hi) {
	int pivot = arr[hi];

	int idx = lo - 1;

	for (int i = lo; i < hi; ++i) {
		if (arr[i] <= pivot) {
			idx++;
			int temp = arr[i];
			arr[i] = arr[idx];
			arr[idx] = temp;
		}
	}

	idx++;
	arr[hi] = arr[idx];
	arr[idx] = pivot;

	return idx;
}
